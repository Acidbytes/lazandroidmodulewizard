
** Tutorial: Lazarus Android Module Wizard For Eclipse Users ** 
       
     
    Version 0.3 - revision 0.1 - 28 december 2013 -
				

"A wizard for create JNI Android loadable module (.so) in Lazarus/Free Pascal using DataModules" 


      Author: Jose Marques Pessoa : jmpessoa__hotmail_com


      Please, for complete reference read "readme.txt"


I. INSTALL Laz4Android 

      https://skydrive.live.com/?cid=89ae6b50650182c6&id=89AE6B50650182C6%21149

      Warning: original laz4android1.1-41139 --> win32/Android NDK-7c/ARM
 
      
      NEW! win32/Android NDK-9/{ARM and x86 !} :: Thanks again to TrueTom!
 
      https://sourceforge.net/projects/laz4android/files/?source=navbar 


   1. From Laz4Android IDE   - Install Packages


      HINT: to compile/install/reinstall a package in Laz4Android, please, open a "dummy" windows project.... 
            you always MUST close the cross compile project!   


      1.1 Package -> Open Package -> "tfpandroidbridge_pack.lpk"  [Android Components Bridges]

	  Ref. image: http://www.opendrive.com/files?Ml8zNjMwNDQ3NF83SzhsZg

      1.1.1 From Package Wizard

            - Compile
            - Use -> Install
 
      1.2 Package -> Open Package -> "lazandroidwizardpack.lpk"
   
      1.2.1 From Package Wizard

            - Compile
            - Use -> Install


II. [GUI Project Support] Android Components Bridges - Simon's Controls remake with many extensions!
        
    :: Support for "Android Bridges" components Controls [jControls/jVisualControls]!

  1. From Eclipse IDE: 

        1.1. File -> New -> Android Application Project
        
	1.2. [Next]
	1.3. [Next]
	1.4. [Next]
	
	1.5. On "Create Activity" Dialog select: <Blank Activity>   [Next]
             
             ref. Image: http://www.opendrive.com/files?Ml8zNjMwMDUwOF9pZm4xMQ


             
        1.6. On "Activity Name" Dialog enter: App  [Finish] 
             

             WARNING:"App" name is MANDATORY! 
   

             ref. Image: https://www.opendrive.com/files?Ml8zNjMwMDE0M19aZ2dkeA

        
       	1.7  Right click your recent created project -> Close  
    
  
  2. From Laz4Android IDE
	
	2.1. Project -> New Project 
        
	2.2. On "Create a new project" Dialog select: <JNI Android Module> 

	     ref. Image: http://www.opendrive.com/files?Ml8zNjMwMTY4MF9HMVRHRg


        2.2. From "Android Module Wizard: Configure Paths"

             ref. Image: http://jmpessoa.opendrive.com/files?Ml8zNzM2NzE1OV9YdHJXaw
                         
                         
    		-Path to Java JDK
     	
	          ex. C:\Program Files (x86)\Java\jdk1.7.0_21    {win32}


       		-Path to Android SDK

                  ex. C:\adt32\sdk


		-Select Ndk version: [7c or 9]

		
		-Select Android Platform: [ex. android-14]


	     	-Path to Ndk 

	          ex.  C:\adt32\ndk7       


		-Path to Java Resources  [Simonsayz's Controls.java,  *.xml and etc...]:
     	
		  ex. C:\laz4android\components\LazAndroidWizard\java


          	-Path to Workspace

         	  ex. C:\adt32\eclipse\workspace


 	        -Select Eclipse Project:		                                             
   
	          ex.C:\adt32\eclipse\workspace\AppDemo1	  

                                                  
	        -Select others Options [Instructions; FPU; Project "Eclipse"; GUI Controls "Yes"; Target Api] 


        2.3. OK!

                         
        2.4. From "Android Module Wizard: Select Java Source for JNI..."

		-From left panel/tree Select Project by Name [AppDemo1] -> src

                -From top panel/View right click "App.java" file 

		-On Popup menu select/click <Get Simonsayz's Templates> 
            
		 	ref. Image: http://www.opendrive.com/files?Ml8zNjMwMjI1Ml9kOXNRag 

                -Double Click "Control.java" file...
 
		 	ref. Image: http://www.opendrive.com/files?Ml8zNjMwMjkyM183ZVd2MA

	2.5. OK  

	      - Pascal JNI Interface was created! 	


	2.6. follow the hint on code: "save all files to location....."  { \jni folder }


	2.7. From Component Palette select page <Android Bridges>

        
       	      ref. Image: http://www.opendrive.com/files?Ml8zNjMwNDQ3NF83SzhsZg
                            

	     -Put e configure some component on DataModule form... etc...


	2.8. From Lazarus IDE

      	     -Run -> Build


        2.9. Yes! You got it! ".so" was created! see \libs folder...


        3.0. NEW! For multi build modes, please, read "readme.txt" in ..\jni\build-modes folder


    3. Build and Run Android Application


        3.1.From Eclipse IDE

          -double click your project //that is: open the project...

          -right click your  project: -> Refresh
	
          -right click your  project: -> Run as -> Android Application
	  


III. [No GUI Project Support] - just a basic android ".so" - 

      :: No Support for "Android Bridges" components  jControls/jVisualControls!

  
1. From Eclipse IDE:

      - File -> New -> Android Application Project ...[Next], [Next]...[Finish]!

      - From Package Explore -> src
    
        :Right click your recent created package -> new -> class  
    
        :Enter new class name... (ex. JNIHello) 
   
        :Edit your class code for wrapper native methods....

        ex:

   	public class JNIHello {

	   public native String getString(int flag); 
	   public native int getSum(int x, int y);

           static {
		try {
     		    System.loadLibrary("jnihello");  //*	     	   
		} catch(UnsatisfiedLinkError ule) {
		    ule.printStackTrace();
		}
           }

         }  

   
       * warning: System.loadLibrary("...") must match class Name "lowercase"...
         ex. JNIHello -> "jnihello"
      
2. From Laz4Android IDE 

   2.1. On "Create a new project" Dialog select: <JNI Android Module> 

       ref. Image: https://www.opendrive.com/files?Ml8zNjg3MDU0MV9nTXZsdA


   2.2. From "Android Module Wizard: Configure Paths"

  
      ref. Image: http://jmpessoa.opendrive.com/files?Ml8zNzM2NzE1OV9YdHJXaw
                         
                         
    		-Path to Java JDK
     	
	          ex. C:\Program Files (x86)\Java\jdk1.7.0_21    {win32}


       		-Path to Android SDK

                  ex. C:\adt32\sdk


		-Select Ndk version: [7c or 9]


		-Select Android Platform: [ex. android-14]


	     	-Path to Ndk 

	          ex.  C:\adt32\ndk7       


		-Path to Java Resources  [Simonsayz's Controls.java,  *.xml and etc...]:
     	
		  ex. C:\laz4android\components\LazAndroidWizard\java    [... but not used for "noGUI" Eclipse Project] 


          	-Path to Workspace

         	  ex. C:\adt32\eclipse\workspace


 	        -Select Eclipse Project:		                                             
   
	          ex.C:\adt32\eclipse\workspace\AppNoGUIDemo1	  

                                                  
	        -Select others Options [Instructions; FPU; Project "Eclipse"; GUI Controls "No"; Target Api, etc...] 


   2.3. OK!


   2.4. From "Android Module Wizard: Select Java Source for JNI..."

     -From left panel/tree Select Project by Name [AppNoGUIDemo1] -> src
 
     -From top panel/View double Click the Java wrapper class for native methods....
 
      ex. "JNIHello.java" 


   2.5. OK!  

      - Pascal JNI Interface was created! 
	

   2.6. follow the code hint: "save all files to location....." {save all in \jni folder ...}

     
   2.7. Implement the Pascal JNI Interface methods.....


   2.8. From Lazarus4Android IDE

       -Run -> Build  
      
 
   2.9. Yes! You got it! ".so" was created! see \libs folder...


   3.0. NEW! For multi build modes, please, read "readme.txt" in ..\jni\build-modes folder 


   3.1. Yes! You got it! ".so" was created! see \libs folder...


3. Build and Run Android Application

        3.1. From Eclipse IDE

          -double click your project //that is: open the project...

          -right click your  project: -> Refresh
	
          -right click your  project: -> Run as -> Android Application

                            	
IV. Yes! Lazarus/Free Pascal does RAD on Android!


V. Download Demos 

    [Eclipse GUI Projects ]

      AppDemo1 - ref. http://www.opendrive.com/files?Ml8zNjMwNTE0N18xVUZ2ag  
      AppDemo2 - ref. http://www.opendrive.com/files?Ml8zNjMwNTMxN19YTHgxWg

    [Eclipse NoGUI Projects ]

      AppNoGUIDemo1 - ref. http://jmpessoa.opendrive.com/files?Ml8zNzM3NzgxNF85bXpibA

VI. PANIC!!

06-11 22:32:12.939: I/dalvikvm(3114): 
java.lang.SecurityException: Requires READ_PHONE_STATE: Neither user 10039 nor current process has android.permission.READ_PHONE_STATE.

Solution [Eclipse]: simulates one [false] edition of "AndroidManifest.xml" and save it!


  Thank you!

  _____jmpessoa_hotmail_com_____
