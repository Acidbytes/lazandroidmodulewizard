
** Tutorial: Lazarus Android Module Wizard For Eclipse Users ** 

	!!Please, for complete [UPDATED !!] reference read "readme.txt"       
    
	Version 0.6 - rev. 09 - 20 December 2014 -				

	Lazarus Android Module Wizard: Form Designer and Components development model! 		
	"A wizard to create JNI Android loadable module (.so) in Lazarus/Free Pascal using 
	[datamodule like] Form Designer and Components!" 

	Author: Jose Marques Pessoa : jmpessoa__hotmail_com

		https://github.com/jmpessoa/lazandroidmodulewizard
		http://forum.lazarus.freepascal.org/index.php/topic,21919.0.html
  

I. INSTALL Laz4Android [win32]
			
		NEW! Laz4Android [by TrueTom]
			Date:2014-10-18
			FPC: 2.7.1 SVN 28863  win32/arm-android/i386-android/jvm-android
			Lazarus:1.3 trunk svn 46592
			Android NDK: r10c (arm-linux-androideabi-4.6 + x86-4.6)
			http://sourceforge.net/projects/laz4android/files/?source=navbar
			:To Install, please, read the "Laz4Android_readme.txt"


			1. From Laz4Android IDE - Install Wizard Packages

			1.1 Package -> Open Package -> "tfpandroidbridge_pack.lpk"  [Android Components Bridges!]
				Ref. image: https://www.opendrive.com/files?Ml8zNjMwNDQ3NF83SzhsZg

			1.1.1 From Package Wizard
				- Compile
				- Use -> Install

 			1.2 Package -> Open Package -> "lazandroidwizardpack.lpk"
   			1.2.1 From Package Wizard
				- Compile
				- Use -> Install     

 			1.3 Package -> Open Package -> "amw_ide_tools.lpk"  [folder: ..\LazAndroidWizard\ide_tools]
   			1.3.1 From Package Wizard
				- Compile
				- Use -> Install    
				- ref. https://jmpessoa.opendrive.com/files?Ml82Nzg4MzAyNF9leGVIVg

			HINT: to compile/install/reinstall a package in Laz4Android [win32!],
				please, open a "dummy" windows project.... you always MUST close the cross compile project!  
			
		-->> Linux Users: Get Lazarus 1.3 rev >= 45216,45217 ... and fpc 2.7.1 cross /arm/x86/android ... etc.

II. [Android Project] 
        
    :: Support for "Android Bridges" components Controls [jControls/jVisualControls]!
	[Simon's Controls remake with many extensions!]

	1. From Eclipse IDE: 

        1.1. File -> New -> Android Application Project
        
	1.2. [Next]
	1.3. [Next]
	1.4. [Next]
	
	1.5. On "Create Activity" Dialog select: <Blank Activity>   [Next]
             
             ref. Image: http://www.opendrive.com/files?Ml8zNjMwMDUwOF9pZm4xMQ
          
        1.6. On "Activity Name" Dialog enter: App  [Finish] 
             
             WARNING:"App" name is MANDATORY! 
   
             ref. Image: https://www.opendrive.com/files?Ml8zNjMwMDE0M19aZ2dkeA
        
       	1.7  Right click your recent created project -> Close  
      
	2. From Lazarus IDE menu Tools -->> "Android Module Wizard" --> Paths Settings"

		ref. https://jmpessoa.opendrive.com/files?Ml82Nzg4MzA1OF9yVVU3RA
                                                 
   		-Path to Java JDK
     	
	          ex. C:\Program Files (x86)\Java\jdk1.7.0_21    {java win32}

       		-Path to Android SDK

                  ex. C:\adt32\sdk


		-Select Ndk version: [10]

	     	-Path to Ndk 

	          ex.  C:\adt32\ndk10   
   
		-Path to Java Resources  [Simonsayz's Controls.java,  *.xml and default Icons]:
     	
		  ex. C:\Laz4Android\components\LazAndroidWizard\java

		-Path to Lazbuild 

		  ex. C:\Laz4Android

	2.1 Project -> New Project 
        
	2.2. On "Create a new project" Dialog select: <JNI Android Module> 

	     ref. Image: http://www.opendrive.com/files?Ml8zNjMwMTY4MF9HMVRHRg

        2.3. From "Android Module Wizard" dialog prompt:

		ref. https://jmpessoa.opendrive.com/files?Ml82NzAyMTYzNV9JczRSMw

          	-Path to Workspace [just a projects folder]

         	  ex. C:\adt32\eclipse\workspace

	        -Select others Options [Instructions; FPU;  Target Api, etc..., Project "Eclipse";] 
                         
        2.4. From "Android Module Wizard: Select Java Source for JNI..."

		-From left panel/tree Select Project by name -> src

                -From top panel/View right click "App.java" file 

		    --> On Popup menu select/click <Get Simonsayz's Templates> 
            
		 	ref. Image: http://www.opendrive.com/files?Ml8zNjMwMjI1Ml9kOXNRag 

                -Double Click "Control.java" file...
 
		 	ref. Image: http://www.opendrive.com/files?Ml8zNjMwMjkyM183ZVd2MA

	2.5. OK  

	        - Pascal JNI Interface was created! 	

	2.6. follow the hint on code: "save all files to location....."  { \jni folder }

	2.6. From Component Palette select page <Android Bridges>
        
        	ref. Image: http://www.opendrive.com/files?Ml8zNjMwNDQ3NF83SzhsZg
                            
		-Put e configure some component on android form... etc...

	3. From Laz4Android IDE

		-Run -> Build

        4. Yes! You got it! ".so" was created! see \libs folder...

        5. NEW! For multi build modes, please, read "readme.txt" in ..\jni\build-modes folder 

        6. Please, read the "readme.txt" in your project folder to learn how to buidl Android Application [Apk]
	
	7. NEW! Lazarus IDE menu "Tools" -> "Android Module Wizard" -> Late: Apk Expert Tools [Build, Install, ...]
		:: Thanks to Thierry Dijoux! 
		ref. https://jmpessoa.opendrive.com/files?Ml82Nzg4MzA2N184VWZaWg 

		:: Plug your device to usb port -> go to "build apk" -> go to "install apk" -- enjoy it!			


    3. Build and Run Android Application 

        3.1.From Eclipse IDE

          -double click your project //that is: open the project...

          -right click your  project: -> Refresh (*)
	
          -right click your  project: -> Run as -> Android Application

	
	(*) Refresh do not refresh "AndroidManifest.xml" you need do it by hand!
	SOLUTION: simulates some change/edition of "AndroidManifest.xml" and save it!

	ERROR: 06-11 22:32:12.939: I/dalvikvm(3114): 
	java.lang.SecurityException: Requires READ_PHONE_STATE: 
	Neither user 10039 nor current process has android.permission.READ_PHONE_STATE.

	OR "App Stop"

	SOLUTION: [for Eclipse]: simulates some change/edition of "AndroidManifest.xml" and save it!
	  
III. [Generic Project Support] - just a basic android ".so" - 

      :: No Support for "Android Bridges" components  jControls/jVisualControls!
  
1. From Eclipse IDE:

      - File -> New -> Android Application Project ...[Next], [Next]...[Finish]!

      - From Package Explore -> src
    
        :Right click your recent created package -> new -> class  
    
        :Enter new class name... (ex. JNIHello) 
   
        :Edit your class code for wrapper native methods....

        ex:

   	public class JNIHello {

	   public native String getString(int flag); 
	   public native int getSum(int x, int y);

           static {
		try {
     		    System.loadLibrary("jnihello");  //*	     	   
		} catch(UnsatisfiedLinkError ule) {
		    ule.printStackTrace();
		}
           }

         }  

   
       * warning: System.loadLibrary("...") must match class Name "lowercase"...
         ex. JNIHello -> "jnihello"
      
2. From Laz4Android IDE 

   2.1. On "Create a new project" Dialog select: <JNI Android Module> 

       ref. Image: https://www.opendrive.com/files?Ml8zNjg3MDU0MV9nTXZsdA

   2.4. From "Android Module Wizard: Select Java Source for JNI..."

     -From left panel/tree Select Project by Name [AppNoGUIDemo1] -> src
 
     -From top panel/View double Click the Java wrapper class for native methods....
 
      ex. "JNIHello.java" 

   2.5. OK!  

      - Pascal JNI Interface was created! 
	
   2.6. follow the code hint: "save all files to location....." {save all in \jni folder ...}
     
   2.7. Implement the Pascal JNI Interface methods.....

   2.8. From Lazarus4Android IDE

       -Run -> Build  
       
   2.9. Yes! You got it! ".so" was created! see \libs folder...

   3.0. NEW! For multi build modes, please, read "readme.txt" in ..\jni\build-modes folder 

   3.1. Yes! You got it! ".so" was created! see \libs folder...

   3.2. NEW! Lazarus IDE menu "Tools" -> "Android Module Wizard" -> Late: Apk Expert Tools [Build, Install, ...]
		:: Thanks to Thierry Dijoux! 
		ref. https://jmpessoa.opendrive.com/files?Ml82NzAyMTYwMl9pUDV3RQ  		

3. Build and Run Android Application

        3.1. From Eclipse IDE

          -double click your project //that is: open the project...

          -right click your  project: -> Refresh
	
          -right click your  project: -> Run as -> Android Application 
		
	  -Pick a real device or Emulador

	3.2 PANIC: [Apk Stop :(( ]
		06-11 22:32:12.939: I/dalvikvm(3114): 
		java.lang.SecurityException: 
		Requires READ_PHONE_STATE: Neither user 10039 nor current process has android.permission.READ_PHONE_STATE.

		SOLUTION: 

		[Eclipse]: simulates one [false/dummy] edition of "AndroidManifest.xml" and save it!


IV. How to use the Demos:

	1. Open the lazarus project "controls.lpi" [...\jni] 

	Change this informations to correct one!

	"C:\adt32\Ndk10"   -- just my system NDK path
	"C:\adt32\eclipse\workspace"  -- just my system eclipse workspace 

	2. Go to Lazarus IDE

		->Project

		->Project -> Option

		->Path

		change/modify paths according to your system ..


	3. Open/edit the "controls.lpi" [...\jni],  you can use Notepad like editor....

		Modify some [piece] of path information 

		[C:\adt32\eclipse\workspace] 
		[C:\adt32\Ndk10]

		according to your system ..

		HINT: All eclipse projects support Ant!
			You can build/install all eclipse projects just with "Ant"... 
			see "build.bat" [or .sh] and "install.bat" or [.sh]
                            	
V. Yes! Lazarus/Free Pascal does RAD on Android!

  Thank you!

  _____jmpessoa_hotmail_com_____
